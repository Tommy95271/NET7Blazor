@page "/quick-grid-filter"
@using Microsoft.AspNetCore.Components.QuickGrid
@using SampleBlazorWebAssembly.Models;
@using SampleBlazorWebAssembly.Services;

<div class="page-size-chooser">
    Items per page:
    <select @bind="@pagination.ItemsPerPage">
        <option>5</option>
        <option>10</option>
        <option>20</option>
        <option>50</option>
    </select>
</div>

<div class="d-grid w-25">
    <QuickGrid Items="@filteredPeople" Pagination="@pagination">
        <PropertyColumn Property="@(p => p.PersonId)" Sortable="true" IsDefaultSort="SortDirection.Ascending" />
        <PropertyColumn Property="@(p => p.Name)" Sortable="true" Class="person-name">
            <ColumnOptions>
                <div class="search-box">
                    <input type="search" autofocus @bind="nameFilter" @bind:event="oninput" placeholder="Person name..." />
                </div>
            </ColumnOptions>
        </PropertyColumn>
        <PropertyColumn Property="@(p => p.BirthDate)" Format="yyyy-MM-dd" Sortable="true" />
    </QuickGrid>
<Paginator Value="@pagination" />
</div>


@code {
    string nameFilter;
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };

    IQueryable<Person> people = PersonHelper.GetPeople().AsQueryable();

    IQueryable<Person> filteredPeople
    {
        get
        {
            var result = people.AsQueryable();
            if (!string.IsNullOrEmpty(nameFilter))
            {
                result = people.Where(c => c.Name.Contains(nameFilter, StringComparison.CurrentCultureIgnoreCase));
            }

            return result;
        }
    }
}